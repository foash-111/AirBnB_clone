#!/usr/bin/python3
"""main module for base class
    """
from uuid import uuid4
from datetime import datetime


class BaseModel:
    ""
    """main class for this projecta
    """
    def __init__(self):
        self.id = str(uuid4())
        self.created_at = datetime.now()
        self.updated_at = datetime.now()

    def __str__(self):
        """string represntation of the class"""
        return f"[{self.__class__.__name__}] ({self.id}) {self.__dict__}"

    def save(self):
        """update the object date"""
        self.updated_at = datetime.now()

    def to_dict(self):
        """return dictionary represntation of my object"""
        self.__dict__['__class__'] = self.__class__.__name__
        self.__dict__['created_at'] = self.created_at.isoformat()
        self.__dict__['updated_at'] = self.updated_at.isoformat()
        return self.__dict__

# print(BaseModel.created_at.isoformat())
# print(BaseModel.__dict__)
# print(BaseModel.__class__)


"""constructor


Args:
id (__type__, str): generated by (uuid) & converted to str
created_at (_type_, str): time obj created. Defaults to None.
updated_at (_type_, str): time obj updated. Defaults to None.
"""

"""string representation of an object"""

"""updates the public instance attribute
updated_at with the current datetime"""

"""returns a dictionary containing all
keys/values of __dict__ of the instance
"""
